// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace proj.Migrations
{
    [DbContext(typeof(WAirContext))]
    partial class WAirContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.AirQdata", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("PMtwo")
                        .HasColumnType("float");

                    b.Property<int>("Qindex")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("airqdatas");
                });

            modelBuilder.Entity("Models.CityMun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZIPcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("citymuns");
                });

            modelBuilder.Entity("Models.MernoMesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("airqdataID")
                        .HasColumnType("int");

                    b.Property<int?>("citymunID")
                        .HasColumnType("int");

                    b.Property<int?>("weatherdataID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("airqdataID");

                    b.HasIndex("citymunID");

                    b.HasIndex("weatherdataID");

                    b.ToTable("mernamesta");
                });

            modelBuilder.Entity("Models.Weatherdata", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Humidity")
                        .HasColumnType("float");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<string>("Ukratko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("weatherdatas");
                });

            modelBuilder.Entity("Models.MernoMesto", b =>
                {
                    b.HasOne("Models.AirQdata", "airqdata")
                        .WithMany("mernamesta")
                        .HasForeignKey("airqdataID");

                    b.HasOne("Models.CityMun", "citymun")
                        .WithMany("mernamesta")
                        .HasForeignKey("citymunID");

                    b.HasOne("Models.Weatherdata", "weatherdata")
                        .WithMany("mernamesta")
                        .HasForeignKey("weatherdataID");

                    b.Navigation("airqdata");

                    b.Navigation("citymun");

                    b.Navigation("weatherdata");
                });

            modelBuilder.Entity("Models.AirQdata", b =>
                {
                    b.Navigation("mernamesta");
                });

            modelBuilder.Entity("Models.CityMun", b =>
                {
                    b.Navigation("mernamesta");
                });

            modelBuilder.Entity("Models.Weatherdata", b =>
                {
                    b.Navigation("mernamesta");
                });
#pragma warning restore 612, 618
        }
    }
}
